/* Helper functions. */

#version 460 core

struct BucketData {
    int startIndex;
    int particlesInBucket;
    int nextParticleSlot;
    int pd;
};

layout(std430, binding=1) buffer GridStartIndices {
    BucketData startIndices[];
};

layout(location = 0) uniform float gridCellSize;

// Get the grid cell containing point `p`. Will crash if `p` is outside the grid.
ivec3 posToCell(vec4 v) {
    return ivec3(floor(v.x / gridCellSize), floor(v.y / gridCellSize), floor(v.z / gridCellSize));
}

// Convert a grid cell `cell` to a flattened version that can be used to access `startIndices`.
uint flatten(ivec3 cell) {
    uint tmpx = (cell.x * 78455519);
    uint tmpy = (cell.y * 41397959);
    uint tmpz = (cell.z * 27614441);
    return uint(abs(tmpx ^ tmpy ^ tmpz)) % (startIndices.length());
}