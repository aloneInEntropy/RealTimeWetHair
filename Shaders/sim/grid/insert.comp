/* Reduce each particle from its bin, creating the final lookup table. */

#version 460 core

#define LOCAL_SIZE 8

layout (local_size_x = LOCAL_SIZE) in;

struct BucketData {
    int startIndex;
    int particlesInBucket;
    int nextParticleSlot;
    int pd;
};

layout(std430, binding=0) buffer PredictedPositions {
    vec4 ps[];
};

layout(std430, binding=1) buffer GridStartIndices {
    BucketData startIndices[];
};

layout(std430, binding=2) buffer GridCellEntries {
    int cellEntries[];
};

ivec3 posToCell(vec4 v);
uint flatten(ivec3 cell);

void main() {
    uint gid = gl_GlobalInvocationID.x;
    if (gid >= ps.length()) return;

    uint key = flatten(posToCell(ps[gid]));
    int nid = atomicAdd(startIndices[key].nextParticleSlot, 1);
    cellEntries[startIndices[key].startIndex + nid] = int(gid);
}
